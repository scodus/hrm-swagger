openapi: 3.0.0
info:
  title: hrm
  description: hrm
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Super admin
  - name: Super admin > Company
  - name: Super admin > Company > Verify Mail
  - name: Super admin > Company > Insurance Code
  - name: Super admin > Company > Occupation Code
  - name: Super admin > Status
  - name: Super admin > Parameter
  - name: Super admin > Agreement
  - name: Super admin > Agreement Type
  - name: Super admin > Closing Period
  - name: Super admin > Tax Office
  - name: Super admin > Nfz Branch
  - name: Company Admin
  - name: Company Admin > Employee
  - name: Company Admin > Department
  - name: Company Admin > Parameter
  - name: Company Admin > Agreement
  - name: Company Admin > auth
  - name: Company Admin > Insurance Code
  - name: Company Admin > Occupation Code
  - name: Company Admin > Agreement Type
  - name: Company Admin > Tax Office
  - name: Company Admin > Nfz Branch
  - name: Password Reset
  - name: Folder
paths:
  /api/company/send-admin-verification-mail:
    post:
      tags:
        - Super admin > Company > Verify Mail
      summary: send verification mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: rehacawu@decabg.eu
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/company/verify-admin-mail:
    post:
      tags:
        - Super admin > Company > Verify Mail
      summary: verify by changing password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: VDjc597mBTGGCCEWN3A8
                new_password:
                  type: string
                  example: Asd@360
                new_password_confirmation:
                  type: string
                  example: Asd@360
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/insurance-code:
    post:
      tags:
        - Super admin > Company > Insurance Code
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: insurance code 1
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company > Insurance Code
      summary: all
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/insurance-code/{id}:
    post:
      tags:
        - Super admin > Company > Insurance Code
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: asd
                _method: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company > Insurance Code
      summary: find
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super admin > Company > Insurance Code
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/occupation-code:
    post:
      tags:
        - Super admin > Company > Occupation Code
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: ASd
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company > Occupation Code
      summary: all
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/occupation-code/{id}:
    post:
      tags:
        - Super admin > Company > Occupation Code
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: asd
                _method: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company > Occupation Code
      summary: find
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super admin > Company > Occupation Code
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '3'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company:
    post:
      tags:
        - Super admin > Company
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Company Two
                short_name:
                  type: string
                  example: three
                address:
                  type: string
                  example: Kalikasthan
                status_id:
                  type: integer
                  description: values-> 0:inactive, 1:active
                  example: '1'
                tax_id:
                  type: integer
                  example: '1234567'
                regon:
                  type: string
                  example: 1234as
                bdo:
                  type: integer
                  example: '12345'
                phone_number:
                  type: integer
                  example: '98089081'
                company_detail[email]:
                  type: string
                  example: asdasds@gmail.com
                addresses[0][country]:
                  type: string
                  example: Nepal
                addresses[0][zip]:
                  type: integer
                  example: '12'
                addresses[0][post]:
                  type: string
                  example: post
                addresses[0][house_number]:
                  type: integer
                  example: '72'
                addresses[0][number_of_premises]:
                  type: integer
                  example: '5'
                addresses[0][street]:
                  type: string
                  example: kalika marg
                addresses[0][community]:
                  type: string
                  example: Kalika Tol
                addresses[0][county]:
                  type: string
                  example: Kalika County
                addresses[0][voivodeship]:
                  type: string
                  example: Kalika Voivodeship
                addresses[0][type]:
                  type: string
                  example: default
                addresses[0][same_address_type]:
                  type: string
                addresses[0][city]:
                  type: string
                  example: bhairahawa
                addresses[1][country]:
                  type: string
                  example: India
                addresses[1][street]:
                  type: string
                  example: Seto Pul
                addresses[1][type]:
                  type: string
                  example: business
                addresses[1][same_address_type]:
                  type: string
                user[name]:
                  type: string
                  example: Scodus
                user[email]:
                  type: string
                  example: scodusnp@gmail.com
                addresses[3][type]:
                  type: string
                  example: type 2
                addresses[3][same_address_type]:
                  type: string
                  example: default
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company
      summary: all
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: sort_key
          in: query
          schema:
            type: string
          example: name
        - name: sort_order
          in: query
          schema:
            type: string
          example: desc
        - name: limit
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: 'values: active, inactive'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{company_id}/admin:
    post:
      tags:
        - Super admin > Company
      summary: update company admin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bishals Gurung
                email:
                  type: string
                  example: pobozoxe@fxcoral.biz
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: company_id
          in: path
          schema:
            type: integer
          required: true
          example: '5'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{slug}:
    post:
      tags:
        - Super admin > Company
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Company One
                short_name:
                  type: string
                  example: one
                address:
                  type: string
                  example: Kalikasthan
                status_id:
                  type: integer
                  example: '0'
                tax_id:
                  type: integer
                  example: '12333'
                regon:
                  type: string
                  example: 1234ads
                bdo:
                  type: string
                  example: 12345asd
                phone_number:
                  type: integer
                  example: '9808908'
                company_detail[email]:
                  type: string
                  example: ssssadaw@gmail.com
                addresses[0][country]:
                  type: string
                  example: Nepal
                addresses[0][zip_code]:
                  type: integer
                  example: '12'
                addresses[0][street]:
                  type: string
                  example: kalika marg
                addresses[0][community]:
                  type: string
                  example: Kalika Tol
                addresses[0][county]:
                  type: string
                  example: Kalika County
                addresses[0][voivodeship]:
                  type: string
                  example: Kalika Voivodeship
                addresses[0][type]:
                  type: string
                  example: default
                addresses[1][country]:
                  type: string
                  example: India
                addresses[1][street]:
                  type: string
                  example: Seto Pul
                addresses[1][type]:
                  type: string
                  example: business
                is_business_address_same:
                  type: integer
                  example: '0'
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-two
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company
      summary: find by slug
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-two-1
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super admin > Company
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-two-10
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{slug}/change-active:
    post:
      tags:
        - Super admin > Company
      summary: change active status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                value:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-one
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/status:
    post:
      tags:
        - Super admin > Status
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: status 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/status:
    get:
      tags:
        - default
      summary: all status
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/status/{status_id}:
    delete:
      tags:
        - Super admin > Status
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: status_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/parameter/bulk-update:
    post:
      tags:
        - Super admin > Parameter
      summary: update or create parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - par_name: parameter 1
                  par_type: string
                  par_value: string
                  status_id: 1
                - par_name: parameter 2
                  par_type: integer
                  par_value: 100
                  status_id: 1
                - par_name: parameter 3
                  par_type: float
                  par_value: 99.99
                  status_id: 1
                - par_name: parameter 4
                  par_type: double
                  par_value: 100.1
                  status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/parameters:
    get:
      tags:
        - Super admin > Parameter
      summary: get all parameter
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/agreement:
    post:
      tags:
        - Super admin > Agreement
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: agreement 1
                par_name: param 1
                par_type: param type 1
                par_value: param value 1
                status_id: 0
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Agreement
      summary: get all company agreements
      security:
        - bearerAuth: []
      parameters:
        - name: company_id
          in: query
          schema:
            type: integer
          example: '1'
        - name: employee_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/agreement/{agreement_id}:
    post:
      tags:
        - Super admin > Agreement
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: put
                name: agreement 1 edit
                par_name: param 1
                par_type: param type 1
                par_value: param value 1
                status_id: 0
      security:
        - bearerAuth: []
      parameters:
        - name: agreement_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super admin > Agreement
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: agreement_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/all-agreement:
    post:
      tags:
        - Super admin > Agreement
      summary: get all agreement
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                paginate: 1
                limit: null
                search_keyword:
                  - column_name: null
                    value: null
                where_condition:
                  - column_name: null
                    value: null
                operator_condition:
                  - column_name: null
                    operator: null
                    value: null
                between_condition:
                  - column_name: null
                    value:
                      - null
                      - null
                sort_condition:
                  - column_name: null
                    sort: null
                custom_condition:
                  - name: null
                    value: null
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/agreement-type:
    get:
      tags:
        - Super admin > Agreement Type
      summary: get all
      security:
        - bearerAuth: []
      parameters:
        - name: active
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/agreement-type/{slug}/update-status:
    post:
      tags:
        - Super admin > Agreement Type
      summary: update active status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                status_id:
                  type: integer
                  example: '0'
                _method:
                  type: string
                  example: patch
      security:
        - bearerAuth: []
      parameters:
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: contract-for-specific-work
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/closing-period:
    post:
      tags:
        - Super admin > Closing Period
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: closing period 2
                closing_date:
                  type: string
                  example: '2022-01-01'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/closing-period/{closing_period_id}:
    delete:
      tags:
        - Super admin > Closing Period
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: closing_period_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/yearly-closing-period:
    post:
      tags:
        - Super admin > Closing Period
      summary: yearly closing period
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                year:
                  type: integer
                  example: '2022'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/tax-office:
    get:
      tags:
        - Super admin > Tax Office
      summary: index
      security:
        - bearerAuth: []
      parameters:
        - name: pagination
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/nfz-branch:
    get:
      tags:
        - Super admin > Nfz Branch
      summary: index
      security:
        - bearerAuth: []
      parameters:
        - name: pagination
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/login:
    post:
      tags:
        - Super admin
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employee:
    post:
      tags:
        - Company Admin > Employee
      summary: store employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company_id: 11
                first_name: Lal
                middle_name: null
                last_name: Shreshta
                pesel: '12345678912'
                tax_id: 123
                gender: male
                email: asdasdasd@asd
                department_id: 2
                employeed_from: '2022-01-01'
                employeed_to: ''
                employee_detail:
                  father_name: Dhan Bahadur
                  mother_name: Mina Bahadur
                  citizenship: Nepal
                  dob: '1990-01-01'
                  pob: Nepal
                  identification_type: passport
                  identification_number: 1234-346-5678-6709
                  state_issued_document: Nepal
                  bank_name: Global Ime Bank
                  bank_account_number: '9203847520398475'
                address:
                  - zip: '44600'
                    street: street
                    house_number: house-1234
                    number_of_premises: '4'
                    city: kathmandu
                    post: post-132746
                    community: community shield
                    county: county-1
                    voivodeship: voivodeship-1
                    country: Nepal
                    type: permanent
                    same_address_type: ''
                  - zip: '446002'
                    street: street2
                    house_number: house-12342
                    number_of_premises: '4'
                    city: kathmandu2
                    post: post-1327462
                    community: community shield2
                    county: county-12
                    voivodeship: voivodeship-21
                    country: Nepal
                    type: temporary
                    same_address_type: ''
                  - type: new type 1
                    same_address_type: temporary
                  - type: new type 2
                    same_address_type: temporary
                status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employee/{employee_id}:
    post:
      tags:
        - Company Admin > Employee
      summary: update employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: put
                company_id: 1
                first_name: Bunu
                middle_name: Lal
                last_name: Shrestha
                pesel: '12345678912'
                tax_id: 123
                gender: male
                email: lalbahadur@email.com
                department_id: 2
                employeed_from: '2022-01-01'
                employeed_to: ''
                employee_detail:
                  mother_name: Mina dhan Bahadur
                  citizenship: Nepal
                  dob: '1990-01-01'
                  pob: Nepal
                address:
                  - zip: '44600'
                    street: street
                    house_number: house-1234
                    number_of_premises: '4'
                    city: kathmandu
                    post: post-132746
                    community: community shield
                    county: county-1
                    voivodeship: voivodeship-1
                    country: Nepal
                    type: temporary
                    same_address_type: ''
                  - type: new type 1
                    same_address_type: temporary
                  - type: new type 2
                    same_address_type: temporary
                status_id: 0
      security:
        - bearerAuth: []
      parameters:
        - name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: '87'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Company Admin > Employee
      summary: get single employee
      security:
        - bearerAuth: []
      parameters:
        - name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: '11'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Company Admin > Employee
      summary: delete employee
      security:
        - bearerAuth: []
      parameters:
        - name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /all-employee:
    post:
      tags:
        - Company Admin > Employee
      summary: get all employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                paginate: 0
                limit: null
                search_keyword:
                  - column_name: null
                    value: null
                where_condition:
                  - column_name: null
                    value: null
                operator_condition:
                  - column_name: null
                    operator: null
                    value: null
                between_condition:
                  - column_name: null
                    value:
                      - null
                      - null
                sort_condition:
                  - column_name: null
                    sort: null
                custom_condition:
                  - name: null
                    value: null
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /department:
    post:
      tags:
        - Company Admin > Department
      summary: store department
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Department 1
                status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /department/{department_id}:
    post:
      tags:
        - Company Admin > Department
      summary: update department
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: put
                title: Department 2 edit
                status_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: department_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Company Admin > Department
      summary: get single department
      security:
        - bearerAuth: []
      parameters:
        - name: department_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Company Admin > Department
      summary: delete department
      security:
        - bearerAuth: []
      parameters:
        - name: department_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /all-department:
    post:
      tags:
        - Company Admin > Department
      summary: get all deparmtnet
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                paginate: 0
                limit: null
                search_keyword:
                  - column_name: null
                    value: null
                where_condition:
                  - column_name: null
                    value: null
                operator_condition:
                  - column_name: null
                    operator: null
                    value: null
                between_condition:
                  - column_name: null
                    value:
                      - null
                      - null
                sort_condition:
                  - column_name: null
                    sort: null
                custom_condition:
                  - name: null
                    value: null
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /current-parameter:
    get:
      tags:
        - Company Admin > Parameter
      summary: get parameters added by superadmin
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /parameter:
    post:
      tags:
        - Company Admin > Parameter
      summary: update or create new parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                parameter:
                  - date_s: '2023-12-11'
                    par_name: par1
                    par_type: integer
                    par_value: 301
                  - date_s: '2023-12-11'
                    par_name: par2
                    par_type: integer
                    par_value: 302
                  - date_s: '2023-12-11'
                    par_name: par3
                    par_type: integer
                    par_value: 721
                  - date_s: '2023-12-11'
                    par_name: par4
                    par_type: integer
                    par_value: 902
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /all-parameter:
    post:
      tags:
        - Company Admin > Parameter
      summary: get all parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                paginate: 0
                limit: null
                search_keyword:
                  - column_name: null
                    value: null
                where_condition:
                  - column_name: null
                    value: null
                operator_condition:
                  - column_name: null
                    operator: null
                    value: null
                between_condition:
                  - column_name: null
                    value:
                      - null
                      - null
                sort_condition:
                  - column_name: null
                    sort: null
                custom_condition:
                  - name: null
                    value: null
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /parameter/{parameter_id}:
    get:
      tags:
        - Company Admin > Parameter
      summary: get single parameter
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '68'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /parameter/{parameter_id}/delete:
    delete:
      tags:
        - Company Admin > Parameter
      summary: delete parameter
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '19'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /agreement:
    post:
      tags:
        - Company Admin > Agreement
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                employee_id: 1
                agreement_type_id: 2
                gross_salary: 2000.222
                type: type
                date_of_signing: '2022-02-02'
                start_date: '2022-02-03'
                end_date: null
                position: null
                parameters:
                  work_hour_numerator: 2
                  work_hour_denominator: 3
                  cost_of_getting_income: lack
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Company Admin > Agreement
      summary: get all agreements
      security:
        - bearerAuth: []
      parameters:
        - name: employee_id
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /agreement/{agreement_id}:
    post:
      tags:
        - Company Admin > Agreement
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                employee_id: 1
                agreement_type_id: 2
                gross_salary: 2000.222
                type: type
                date_of_signing: '2022-02-02'
                start_date: '2022-02-04'
                end_date: null
                position: null
                parameters:
                  work_hour_numerator: 2
                  work_hour_denominator: 4
                  cost_of_getting_income: lack
                _method: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: agreement_id
          in: path
          schema:
            type: integer
          required: true
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /agreement/{id}:
    get:
      tags:
        - Company Admin > Agreement
      summary: find
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Company Admin > Agreement
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /agreement/{agreement_id}/logs:
    get:
      tags:
        - Company Admin > Agreement
      summary: logs
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: agreement_id
          in: path
          schema:
            type: integer
          required: true
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - Company Admin > auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
                password:
                  type: string
                  example: Asd@360
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /oauth/token:
    post:
      tags:
        - Company Admin > auth
      summary: oauth test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                grant_type: password
                client_id: 2
                client_secret: UyBVGrF6kQ4cQv5o0n9WKsTjkEU1pFMB5tW3Fw3P
                scope: '*'
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/refresh-token/{refresh_token}:
    post:
      tags:
        - Company Admin > auth
      summary: refresh token
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties: {}
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: >-
            def50200c6875ba06dea2bf73fcf3a0bb01ace239fb4b7c45ae092e495825cf039b95e53249017909db6494d6c3fa0c48dbf5bef79f433fd803e5554a53c4d4f8c0f73e11702492720cec4fa1079b76249a85550d47af91547b78743d3024fece0c3836a9a1d2baae6b6e4ca456d065d21546598f1316766bd2709c26e4cd034e85e04dd97fcd4f0591648996ac494c893f552a5535f21b69083867eb5644017834c1e8b34f9be1e07664e4bf44f75aa76a961de9bdeb8d7da2742cb08cf85ba4974d343641cfd31df307dab0bef428857841a0b31cb2fd15720721be0a43ba51aa4c4aac6a920dd3b6bd00aa82b94ee3fe90b02ba2206da581bab1d13daf5cef21d7410580e17a0465ab101136dc9bb67d8812bfebee78640f0946354e25d3d80b1487b77cee7cdab57fd743ef17df426c9d7a65b988ccd1b81393d89dacbde46affbb46a458461b7d69019533cb94972f6d7d0322874772750af9ee4531076ad8d83b9
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /insurance-code:
    get:
      tags:
        - Company Admin > Insurance Code
      summary: all
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /occupation-code:
    get:
      tags:
        - Company Admin > Occupation Code
      summary: all
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /agreement-type:
    get:
      tags:
        - Company Admin > Agreement Type
      summary: get active
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /tax-office:
    get:
      tags:
        - Company Admin > Tax Office
      summary: index
      security:
        - bearerAuth: []
      parameters:
        - name: pagination
          in: query
          schema:
            type: integer
          example: '1'
        - name: limit
          in: query
          schema:
            type: integer
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /nfz-branch:
    get:
      tags:
        - Company Admin > Nfz Branch
      summary: index
      security:
        - bearerAuth: []
      parameters:
        - name: pagination
          in: query
          schema:
            type: integer
          example: '0'
        - name: limit
          in: query
          schema:
            type: integer
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/password-reset:
    post:
      tags:
        - Password Reset
      summary: send password reset mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/password-reset/change:
    post:
      tags:
        - Password Reset
      summary: change password via reset
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: 0jAgPYYbWXFPUKhaLP7l
                new_password:
                  type: string
                  example: asdf
                new_password_confirmation:
                  type: string
                  example: asdf
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/folder:
    get:
      tags:
        - Folder
      summary: index
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Folder
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Sub Sub Sub Document 1
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/folder/{id}:
    get:
      tags:
        - Folder
      summary: get single folder
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/folder/{folder_id}/store-files:
    post:
      tags:
        - Folder
      summary: store file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                name:
                  type: string
                  description: nullable
                  example: asdw
                _method:
                  type: string
                  example: PUT
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: folder_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /get-image/7:
    get:
      tags:
        - Folder
      summary: get private image
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/get-employee-folders:
    get:
      tags:
        - Folder
      summary: get employee folders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/folder/{employee_id}/folder-id:
    get:
      tags:
        - Folder
      summary: get folder id from employee id
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: '13'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /test:
    get:
      tags:
        - default
      summary: test
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/my-company:
    get:
      tags:
        - default
      summary: my company
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
