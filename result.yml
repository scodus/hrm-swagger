openapi: 3.0.0
info:
  title: hrm
  description: hrm
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
<<<<<<< HEAD
  - name: Super admin
  - name: Super admin > Company
  - name: Super admin > Company > Verify Mail
  - name: Super admin > Status
  - name: Company Admin
  - name: Company Admin > Employee
  - name: Parameter
  - name: Password Reset
  - name: auth
=======
  - name: Admin
  - name: Admin > Company
  - name: Admin > Company > Verify Mail
  - name: Admin > Status
  - name: Company
  - name: Company > Employee
  - name: Parameter
  - name: Password Reset
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
paths:
  /api/company/send-admin-verification-mail:
    post:
      tags:
<<<<<<< HEAD
        - Super admin > Company > Verify Mail
=======
        - Admin > Company > Verify Mail
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      summary: send verification mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/company/verify-admin-mail:
    post:
      tags:
<<<<<<< HEAD
        - Super admin > Company > Verify Mail
=======
        - Admin > Company > Verify Mail
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      summary: verify by changing password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
<<<<<<< HEAD
                token:
                  type: string
                  example: Y5OWJBZXMQDcKwkSVQaM
                new_password:
                  type: string
                  example: P@ssword1
                new_password_confirmation:
                  type: string
                  example: P@ssword1
=======
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
                old_password:
                  type: string
                  example: 66wEJ5O9
                old_password_confirmation:
                  type: string
                  example: 66wEJ5O9
                new_password:
                  type: string
                  example: asd
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company:
    post:
      tags:
        - Super admin > Company
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Company Two
                short_name:
                  type: string
                  example: three
                address:
                  type: string
                  example: Kalikasthan
<<<<<<< HEAD
=======
                email:
                  type: string
                  example: abcde@gmail.comss
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
                status_id:
                  type: integer
                  description: values-> 0:inactive, 1:active
                  example: '1'
                tax_id:
                  type: integer
<<<<<<< HEAD
                  example: '12345678111212'
                regon:
                  type: string
                  example: 1234asdasasd113112
                bdo:
                  type: string
                  example: 123456saw11asd12
                phone_number:
                  type: integer
                  example: '98089081'
                company_detail[email]:
                  type: string
                  example: abcdefghass2dw@gmail.comss
=======
                  example: '12345678'
                regon:
                  type: string
                  example: 1234asdasasd
                bdo:
                  type: string
                  example: 123456saw
                phone_number:
                  type: integer
                  example: '9808908'
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
                addresses[0][country]:
                  type: string
                  example: Nepal
                addresses[0][zip_code]:
                  type: integer
                  example: '12'
                addresses[0][street]:
                  type: string
                  example: kalika marg
                addresses[0][community]:
                  type: string
                  example: Kalika Tol
                addresses[0][county]:
                  type: string
                  example: Kalika County
                addresses[0][voivodeship]:
                  type: string
                  example: Kalika Voivodeship
                addresses[0][type]:
                  type: string
                  example: default
                addresses[0][city]:
                  type: string
                  example: bhairahawa
                addresses[1][country]:
                  type: string
                  example: India
                addresses[1][street]:
                  type: string
                  example: Seto Pul
                addresses[1][type]:
                  type: string
                  example: business
                is_business_address_same:
                  type: integer
                  example: '0'
                user[name]:
                  type: string
<<<<<<< HEAD
                  example: Tom n Jerry
                user[email]:
                  type: string
                  example: tomnjerry8963@gmail.com
=======
                  example: Bishal Gurung
                user[email]:
                  type: string
                  example: leon.schiffesr3asdw600@gmail.co
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company
      summary: all
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: sort_key
          in: query
          schema:
            type: string
          example: name
        - name: sort_order
          in: query
          schema:
            type: string
          example: desc
        - name: limit
          in: query
          schema:
            type: string
<<<<<<< HEAD
        - name: status
          in: query
          schema:
            type: string
          description: 'values: active, inactive'
=======
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{slug}:
    post:
      tags:
        - Super admin > Company
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Company One
                short_name:
                  type: string
                  example: one
                address:
                  type: string
                  example: Kalikasthan
                email:
                  type: string
                  example: abcd@gmail.com
                status_id:
                  type: integer
                  example: '1'
                tax_id:
                  type: integer
                  example: '12333'
                regon:
                  type: string
                  example: 1234ads
                bdo:
                  type: string
                  example: 12345asd
                phone_number:
                  type: integer
                  example: '9808908'
                addresses[0][country]:
                  type: string
                  example: Nepal
                addresses[0][zip_code]:
                  type: integer
                  example: '12'
                addresses[0][street]:
                  type: string
                  example: kalika marg
                addresses[0][community]:
                  type: string
                  example: Kalika Tol
                addresses[0][county]:
                  type: string
                  example: Kalika County
                addresses[0][voivodeship]:
                  type: string
                  example: Kalika Voivodeship
                addresses[0][type]:
                  type: string
                  example: default
                addresses[1][country]:
                  type: string
                  example: India
                addresses[1][street]:
                  type: string
                  example: Seto Pul
                addresses[1][type]:
                  type: string
                  example: business
                is_business_address_same:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: PUT
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-one
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company
      summary: find by slug
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-two
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super admin > Company
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-two
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{slug}/change-active:
    post:
      tags:
        - Super admin > Company
      summary: change active status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                value:
                  type: integer
                  example: '0'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
<<<<<<< HEAD
          example: company-two
=======
          example: company-one
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/status:
    post:
      tags:
        - Super admin > Status
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: status 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/status:
    get:
      tags:
        - default
      summary: all status
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/status/{status_id}:
    delete:
      tags:
        - Super admin > Status
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: status_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employee:
    post:
      tags:
        - Company Admin > Employee
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company_id: 1
                first_name: Lal
                middle_name: ''
                last_name: Bahadur
                pesel: pesel
                tax_id: 123
                gender: male
                email: lalbahadur@email.com
                department: 1
                employeed_from: '2022-01-01'
                employeed_to: ''
                employee_detail:
                  father_name: Dhan Bahadur
                  mother_name: Mina Bahadur
                  citizenship: Nepal
                  dob: '1990-01-01'
                  pob: Nepal
                  identification_type: passport
                  identification_number: 1234-346-5678-6709
                  state_issued_document: Nepal
                  bank_name: Global Ime Bank
                  bank_account_number: '9203847520398475'
                address:
                  - zip: '44600'
                    street: street
                    house_number: house-1234
                    number_of_premises: '4'
                    city: kathmandu
                    post: post-132746
                    community: community shield
                    county: county-1
                    voivodeship: voivodeship-1
                    country: Nepal
                    type: home
                  - zip: '446002'
                    street: street2
                    house_number: house-12342
                    number_of_premises: '4'
                    city: kathmandu2
                    post: post-1327462
                    community: community shield2
                    county: county-12
                    voivodeship: voivodeship-21
                    country: Nepal
                    type: registered
                is_same_registered_address: 0
                status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
<<<<<<< HEAD
    get:
      tags:
        - Company Admin > Employee
      summary: get all employee
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employee/{employee_id}:
    post:
      tags:
        - Company Admin > Employee
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: patch
                company_id: 1
                first_name: Laluu
                middle_name: Prasad
                last_name: Bahadur
                pesel: pesel
                tax_id: 123
                gender: male
                email: lalbahadur@email.com
                department: 1
                employeed_from: '2022-01-01'
                employeed_to: ''
                employee_detail:
                  mother_name: Mina dhan Bahadur
                  citizenship: Nepal
                  dob: '1990-01-01'
                  pob: Nepal
                address:
                  - zip: '44600'
                    street: street
                    house_number: house-1234
                    number_of_premises: '4'
                    city: kathmandu
                    post: post-132746
                    community: community shield
                    county: county-1
                    voivodeship: voivodeship-1
                    country: Nepal
                    type: home
                is_same_registered_address: 1
                status_id: 0
=======
  /company/employee:
    post:
      tags:
        - Company > Employee
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: ''
                middle_name: ''
                last_name: ''
                pesel: ''
                tax_id: ''
                gender: ''
                email: ''
                father_name: ''
                mother_name: ''
                citizenship: ''
                dob: ''
                pob: ''
                identification_type: ''
                identification_number: ''
                state_issued_document: ''
                bank_name: ''
                bank_account_number: ''
                id_number: ''
                department: ''
                address:
                  home_address:
                    zip: ''
                    street: ''
                    house_number: ''
                    number_of_premises: ''
                    city: ''
                    post: ''
                    community: ''
                    county: ''
                    voivodeship: ''
                    country: ''
                  registered_address:
                    zip: ''
                    street: ''
                    house_number: ''
                    number_of_premises: ''
                    city: ''
                    post: ''
                    community: ''
                    county: ''
                    voivodeship: ''
                    country: ''
                is_same_registerd_address: ''
                zus: ''
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/my-company:
    get:
      tags:
        - Company
      summary: my company
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      security:
        - bearerAuth: []
      parameters:
        - name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: '61'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
<<<<<<< HEAD
    delete:
      tags:
        - Company Admin > Employee
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: '54'
=======
  /company/login:
    post:
      tags:
        - Company
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/parameter:
    get:
      tags:
        - Parameter
      summary: get all parameter
<<<<<<< HEAD
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Parameter
      summary: store parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company_id: 36
                date_s: '2021-01-01'
                date_e: '2021-10-10'
                par_name: parameter name 1
                par_type: parameter type
                par_value_s: parameter value string
                par_value_d2: 100.11
                par_value_i: 10
                par_value_d4: 100.1111
=======
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
<<<<<<< HEAD
  /api/parameter/{parameter_id}:
    post:
      tags:
        - Parameter
      summary: update parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                company_id: 1
                date_s: '2021-01-01'
                date_e: '2021-10-10'
                par_name: parameter name 1 edit
                par_type: parameter type
                par_value_s: parameter value string
                par_value_d2: 100.11
                par_value_i: 10
                par_value_d4: 100.1111
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Parameter
      summary: get single parameter
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/parameter/{parameter_id}/delete:
    delete:
      tags:
        - Parameter
      summary: delete parameter
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/password-reset:
    post:
      tags:
        - auth
      summary: password reset
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                token:
                  type: string
                  example: >-
                    0fT6B8qJVB5G6SKkqAl5U7niWB0GM2zOU0jNpctdztZXu01OqIcI4jAJ1X9U4VFL
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/password-reset/change:
    post:
      tags:
        - Password Reset
      summary: change password via reset
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: 0jAgPYYbWXFPUKhaLP7l
                new_password:
                  type: string
                  example: asdf
                new_password_confirmation:
                  type: string
                  example: asdf
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - auth
      summary: login
=======
    post:
      tags:
        - Parameter
      summary: store parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company_id: 1
                date_s: '2021-01-01'
                date_e: '2021-10-10'
                par_name: parameter name 1
                par_type: parameter type
                par_value_s: parameter value string
                par_value_d2: 100.11
                par_value_i: 10
                par_value_d4: 100.1111
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/parameter/{parameter_id}:
    post:
      tags:
        - Parameter
      summary: update parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                _method: patch
                company_id: 1
                date_s: '2021-01-01'
                date_e: '2021-10-10'
                par_name: parameter name 1 edit
                par_type: parameter type
                par_value_s: parameter value string
                par_value_d2: 100.11
                par_value_i: 10
                par_value_d4: 100.1111
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Parameter
      summary: get single parameter
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/parameter/{parameter_id}/delete:
    delete:
      tags:
        - Parameter
      summary: delete parameter
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/password-reset:
    post:
      tags:
        - Password Reset
      summary: send password reset mail
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: superadmin@admin.com
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/password-reset/change:
    post:
      tags:
        - Password Reset
      summary: change password via reset
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
<<<<<<< HEAD
                  example: P@ssw0rd
=======
                  example: MNXEPIllGP41pQDzjhU0
                new_password:
                  type: string
                  example: asd
                new_password_confirmation:
                  type: string
                  example: asd
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
<<<<<<< HEAD
=======
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/user:
    get:
      tags:
        - default
      summary: test
      security:
        - bearerAuth: []
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /password-reset-email:
    post:
      tags:
        - auth
      summary: password reset email
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
<<<<<<< HEAD
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /oauth/token:
    post:
      tags:
        - auth
      summary: oauth test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                grant_type: password
                client_id: 2
                client_secret: UyBVGrF6kQ4cQv5o0n9WKsTjkEU1pFMB5tW3Fw3P
                scope: '*'
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/refresh-token/{refresh_token}:
    post:
      tags:
        - auth
      summary: refresh token test
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties: {}
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: >-
            def502006f9d5d73b922f6c125532ead503018578c0d268907d849e463232a6fb592f61b0ce69ead3f81429a6dc67d9229bf8ecf6c8898997f5e31bad665c6f95245f440b198cf192e3f1be04b099b9f82c3093f08467c1bf0c99c1c5ff58900f5a8e1a7fce716a428183c38d087c802db661b870f6ad2a105e65c555db81347a44ee181ab1d9c708ac62d4fff6817a4742f1c8a0275489058b98d766e4fcd78849c9bbc911bed897dac1cef9d0161c3699ac28ce354981dc197cba08f2bf70bcc3a90932fceb1294e0ee6127da666693a1ff125c27ab3747dbbc47bfac35d1d573b63586f948ae1bda4083f7b16436d3f06b4a499315346a558f6777f3cbcc24e28da6e758ab00f2ab5b4017082374c92d6142e87310aa1e60e634b8b362d62bb0022a5ba05d2da34180238776ade1a166f9389f13e12dd2cf47cb8e3bae4b988f408b21a94b4ab7178f13d8e18f9afcdefe94bbab68b767b3aae0fe65ac25228b04971
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /test:
    get:
      tags:
        - default
      summary: test
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/my-company:
    get:
      tags:
        - default
      summary: my company
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
=======
                name:
                  type: string
                  example: test one
                email:
                  type: string
                  example: testone@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
                password_confirmation:
                  type: string
                  example: P@ssw0rd
                company_id:
                  type: string
                  description: nullable
                status_id:
                  type: string
                  description: nullable
>>>>>>> df9ccb304031d9afef9dc5e05238261dc153b7e3
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
