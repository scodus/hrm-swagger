openapi: 3.0.0
info:
  title: hrm
  description: hrm
  version: '1.0'
  x-logo:
    url: https://github.com/joolfe/logoBanner.png
    backgroundColor: '#FFFFFF'
    altText: logo
  termsOfService: '#'
  contact:
    name: Scodus
    url: https://scodus.com
    email: scodusnp@gmail.com
  license:
    name: MIT
    url: https://es.wikipedia.org/wiki/Licencia_MIT
servers:
  - url: http://{{url}}
components:
  securitySchemes:
    noauthAuth:
      type: http
      scheme: noauth
    bearerAuth:
      type: http
      scheme: bearer
tags:
  - name: Super admin
  - name: Super admin > Company
  - name: Super admin > Company > Verify Mail
  - name: Super admin > Status
  - name: Super admin > Parameter
  - name: Super admin > Agreement
  - name: Company Admin
  - name: Company Admin > Employee
  - name: Company Admin > Department
  - name: Company Admin > Parameter
  - name: Password Reset
  - name: auth
  - name: Folder
paths:
  /api/company/send-admin-verification-mail:
    post:
      tags:
        - Super admin > Company > Verify Mail
      summary: send verification mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: leon.schiffer360@gmail.com
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/company/verify-admin-mail:
    post:
      tags:
        - Super admin > Company > Verify Mail
      summary: verify by changing password
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: sEmLa4DMrJFExCsPOGcl
                new_password:
                  type: string
                  example: P@ssw0rd
                new_password_confirmation:
                  type: string
                  example: P@ssw0rd
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company:
    post:
      tags:
        - Super admin > Company
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Company Two
                short_name:
                  type: string
                  example: three
                address:
                  type: string
                  example: Kalikasthan
                status_id:
                  type: integer
                  description: values-> 0:inactive, 1:active
                  example: '1'
                tax_id:
                  type: integer
                  example: '1234567'
                regon:
                  type: string
                  example: 1234as
                bdo:
                  type: integer
                  example: '12345'
                phone_number:
                  type: integer
                  example: '98089081'
                company_detail[email]:
                  type: string
                  example: ab1000@gmail.com
                addresses[0][country]:
                  type: string
                  example: Nepal
                addresses[0][zip]:
                  type: integer
                  example: '12'
                addresses[0][post]:
                  type: string
                  example: post
                addresses[0][house_number]:
                  type: integer
                  example: '72'
                addresses[0][number_of_premises]:
                  type: integer
                  example: '5'
                addresses[0][street]:
                  type: string
                  example: kalika marg
                addresses[0][community]:
                  type: string
                  example: Kalika Tol
                addresses[0][county]:
                  type: string
                  example: Kalika County
                addresses[0][voivodeship]:
                  type: string
                  example: Kalika Voivodeship
                addresses[0][type]:
                  type: string
                  example: default
                addresses[0][city]:
                  type: string
                  example: bhairahawa
                addresses[1][country]:
                  type: string
                  example: India
                addresses[1][street]:
                  type: string
                  example: Seto Pul
                addresses[1][type]:
                  type: string
                  example: business
                is_business_address_same:
                  type: integer
                  example: '1'
                user[name]:
                  type: string
                  example: Scodus
                user[email]:
                  type: string
                  example: grgbishal360@gmail.com
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company
      summary: all
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: sort_key
          in: query
          schema:
            type: string
          example: name
        - name: sort_order
          in: query
          schema:
            type: string
          example: desc
        - name: limit
          in: query
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
          description: 'values: active, inactive'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{slug}:
    post:
      tags:
        - Super admin > Company
      summary: update
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Company One
                short_name:
                  type: string
                  example: one
                address:
                  type: string
                  example: Kalikasthan
                status_id:
                  type: integer
                  example: '0'
                tax_id:
                  type: integer
                  example: '12333'
                regon:
                  type: string
                  example: 1234ads
                bdo:
                  type: string
                  example: 12345asd
                phone_number:
                  type: integer
                  example: '9808908'
                company_detail[email]:
                  type: string
                  example: ssssadaw@gmail.com
                addresses[0][country]:
                  type: string
                  example: Nepal
                addresses[0][zip_code]:
                  type: integer
                  example: '12'
                addresses[0][street]:
                  type: string
                  example: kalika marg
                addresses[0][community]:
                  type: string
                  example: Kalika Tol
                addresses[0][county]:
                  type: string
                  example: Kalika County
                addresses[0][voivodeship]:
                  type: string
                  example: Kalika Voivodeship
                addresses[0][type]:
                  type: string
                  example: default
                addresses[1][country]:
                  type: string
                  example: India
                addresses[1][street]:
                  type: string
                  example: Seto Pul
                addresses[1][type]:
                  type: string
                  example: business
                is_business_address_same:
                  type: integer
                  example: '0'
                _method:
                  type: string
                  example: put
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-two
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Super admin > Company
      summary: find by slug
      security:
        - noauthAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-one
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super admin > Company
      summary: delete
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-two-10
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/company/{slug}/change-active:
    post:
      tags:
        - Super admin > Company
      summary: change active status
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                value:
                  type: integer
                  example: '1'
                _method:
                  type: string
                  example: patch
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
        - name: slug
          in: path
          schema:
            type: string
          required: true
          example: company-one
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/status:
    post:
      tags:
        - Super admin > Status
      summary: store
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: status 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/status:
    get:
      tags:
        - default
      summary: all status
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/status/{status_id}:
    delete:
      tags:
        - Super admin > Status
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: status_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/parameter/bulk-update:
    post:
      tags:
        - Super admin > Parameter
      summary: update or create parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                - par_name: parameter 1
                  par_type: string
                  par_value: string
                  status_id: 1
                - par_name: parameter 2
                  par_type: integer
                  par_value: 100
                  status_id: 1
                - par_name: parameter 3
                  par_type: float
                  par_value: 99.99
                  status_id: 1
                - par_name: parameter 4
                  par_type: double
                  par_value: 100.1
                  status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/parameters:
    get:
      tags:
        - Super admin > Parameter
      summary: get all parameter
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/agreement:
    post:
      tags:
        - Super admin > Agreement
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: agreement 1
                par_name: param 1
                par_type: param type 1
                par_value: param value 1
                status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/agreement/{agreement_id}:
    post:
      tags:
        - Super admin > Agreement
      summary: update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: put
                name: agreement 1 edit
                par_name: param 1
                par_type: param type 1
                par_value: param value 1
                status_id: 0
      security:
        - bearerAuth: []
      parameters:
        - name: agreement_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Super admin > Agreement
      summary: delete
      security:
        - bearerAuth: []
      parameters:
        - name: agreement_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /admin/login:
    post:
      tags:
        - Super admin
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: tomnjerry8963@gmail.com
                password:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employee:
    post:
      tags:
        - Company Admin > Employee
      summary: store employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                company_id: 1
                fullname: Lal Bahadur
                pesel: pesel
                tax_id: 123
                gender: male
                email: lalbahadur@email.com
                department_id: 2
                employeed_from: '2022-01-01'
                employeed_to: ''
                employee_detail:
                  father_name: Dhan Bahadur
                  mother_name: Mina Bahadur
                  citizenship: Nepal
                  dob: '1990-01-01'
                  pob: Nepal
                  identification_type: passport
                  identification_number: 1234-346-5678-6709
                  state_issued_document: Nepal
                  bank_name: Global Ime Bank
                  bank_account_number: '9203847520398475'
                address:
                  - zip: '44600'
                    street: street
                    house_number: house-1234
                    number_of_premises: '4'
                    city: kathmandu
                    post: post-132746
                    community: community shield
                    county: county-1
                    voivodeship: voivodeship-1
                    country: Nepal
                    type: default
                  - zip: '446002'
                    street: street2
                    house_number: house-12342
                    number_of_premises: '4'
                    city: kathmandu2
                    post: post-1327462
                    community: community shield2
                    county: county-12
                    voivodeship: voivodeship-21
                    country: Nepal
                    type: registered
                is_same_registered_address: 0
                status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /employee/{employee_id}:
    post:
      tags:
        - Company Admin > Employee
      summary: update employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: put
                company_id: 1
                fullname: lal Jung Bahadur
                pesel: pesel
                tax_id: 123
                gender: male
                email: lalbahadur@email.com
                department_id: 2
                employeed_from: '2022-01-01'
                employeed_to: ''
                employee_detail:
                  mother_name: Mina dhan Bahadur
                  citizenship: Nepal
                  dob: '1990-01-01'
                  pob: Nepal
                address:
                  - zip: '44600'
                    street: street
                    house_number: house-1234
                    number_of_premises: '4'
                    city: kathmandu
                    post: post-132746
                    community: community shield
                    county: county-1
                    voivodeship: voivodeship-1
                    country: Nepal
                    type: default
                is_same_registered_address: 1
                status_id: 0
      security:
        - bearerAuth: []
      parameters:
        - name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Company Admin > Employee
      summary: get single employee
      security:
        - bearerAuth: []
      parameters:
        - name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: '10'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Company Admin > Employee
      summary: delete employee
      security:
        - bearerAuth: []
      parameters:
        - name: employee_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  //filter/employee:
    post:
      tags:
        - Company Admin > Employee
      summary: get all employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                limit: null
                search_keyword:
                  - column_name: fullname
                    value: a
                where_condition:
                  - column_name: gender
                    value: male
                operator_condition:
                  - column_name: created_date
                    operator: '>'
                    value: '2022-01-01'
                between_condition:
                  - column_name: created_at
                    value:
                      - '2022-01-10'
                      - '2022-10-10'
                sort_condition:
                  - column_name: id
                    sort: DESC
                custom_condition:
                  - name: custom_name
                    value: custom_value
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /department:
    post:
      tags:
        - Company Admin > Department
      summary: store department
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                title: Department 1
                status_id: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Company Admin > Department
      summary: get all deparmtnet
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /department/{department_id}:
    post:
      tags:
        - Company Admin > Department
      summary: update department
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                method: put
                title: Department 2 edit
                status_id: 1
      security:
        - bearerAuth: []
      parameters:
        - name: department_id
          in: path
          schema:
            type: integer
          required: true
          example: '2'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Company Admin > Department
      summary: get single department
      security:
        - bearerAuth: []
      parameters:
        - name: department_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - Company Admin > Department
      summary: delete department
      security:
        - bearerAuth: []
      parameters:
        - name: department_id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /current-parameter:
    get:
      tags:
        - Company Admin > Parameter
      summary: get parameters added by superadmin
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /parameter:
    post:
      tags:
        - Company Admin > Parameter
      summary: update or create new parameter
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                parameter:
                  - date_s: '2021-01-11'
                    par_name: pension_insurance_employee
                    par_type: integer
                    par_value: '30'
                  - date_s: '2021-01-11'
                    par_name: disablitiy_insurance_employee
                    par_type: integer
                    par_value: 30
                  - date_s: '2021-01-11'
                    par_name: sickness_insurance_employee
                    par_type: integer
                    par_value: 72
                  - date_s: '2021-01-11'
                    par_name: pension_insurance_employer
                    par_type: integer
                    par_value: 90
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    get:
      tags:
        - Company Admin > Parameter
      summary: get all parameter
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /parameter/{parameter_id}:
    get:
      tags:
        - Company Admin > Parameter
      summary: get single parameter
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '20'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /parameter/{parameter_id}/delete:
    delete:
      tags:
        - Company Admin > Parameter
      summary: delete parameter
      security:
        - bearerAuth: []
      parameters:
        - name: parameter_id
          in: path
          schema:
            type: integer
          required: true
          example: '19'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/password-reset:
    post:
      tags:
        - Password Reset
      summary: send password reset mail
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: yaredip664@runqx.com
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/password-reset/change:
    post:
      tags:
        - Password Reset
      summary: change password via reset
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: 0jAgPYYbWXFPUKhaLP7l
                new_password:
                  type: string
                  example: asdf
                new_password_confirmation:
                  type: string
                  example: asdf
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/login:
    post:
      tags:
        - auth
      summary: login
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                  example: P@ssw0rd
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /oauth/token:
    post:
      tags:
        - auth
      summary: oauth test
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                grant_type: password
                client_id: 2
                client_secret: UyBVGrF6kQ4cQv5o0n9WKsTjkEU1pFMB5tW3Fw3P
                scope: '*'
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/refresh-token/{refresh_token}:
    post:
      tags:
        - auth
      summary: refresh token test
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties: {}
      security:
        - noauthAuth: []
      parameters:
        - name: refresh_token
          in: path
          schema:
            type: string
          required: true
          example: >-
            def502006f9d5d73b922f6c125532ead503018578c0d268907d849e463232a6fb592f61b0ce69ead3f81429a6dc67d9229bf8ecf6c8898997f5e31bad665c6f95245f440b198cf192e3f1be04b099b9f82c3093f08467c1bf0c99c1c5ff58900f5a8e1a7fce716a428183c38d087c802db661b870f6ad2a105e65c555db81347a44ee181ab1d9c708ac62d4fff6817a4742f1c8a0275489058b98d766e4fcd78849c9bbc911bed897dac1cef9d0161c3699ac28ce354981dc197cba08f2bf70bcc3a90932fceb1294e0ee6127da666693a1ff125c27ab3747dbbc47bfac35d1d573b63586f948ae1bda4083f7b16436d3f06b4a499315346a558f6777f3cbcc24e28da6e758ab00f2ab5b4017082374c92d6142e87310aa1e60e634b8b362d62bb0022a5ba05d2da34180238776ade1a166f9389f13e12dd2cf47cb8e3bae4b988f408b21a94b4ab7178f13d8e18f9afcdefe94bbab68b767b3aae0fe65ac25228b04971
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/folder:
    get:
      tags:
        - Folder
      summary: index
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - Folder
      summary: store
      requestBody:
        content:
          application/json:
            schema:
              type: object
              example:
                name: Sub Document 1
                parent_id: 1
                is_employee_folder: 0
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/folder/{id}:
    get:
      tags:
        - Folder
      summary: get single folder
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          example: '1'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/folder/{folder_id}/store-files:
    post:
      tags:
        - Folder
      summary: store file
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                _method:
                  type: string
                  example: PUT
      parameters:
        - name: folder_id
          in: path
          schema:
            type: integer
          required: true
          example: '4'
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /api/get-employee-folders:
    get:
      tags:
        - Folder
      summary: get employee folders
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /test:
    get:
      tags:
        - default
      summary: test
      security:
        - noauthAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /client/my-company:
    get:
      tags:
        - default
      summary: my company
      security:
        - bearerAuth: []
      parameters:
        - name: Accept
          in: header
          schema:
            type: string
          example: application/json
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
